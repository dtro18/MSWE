Environment Used:
Node.js: v22.11.0
Browser: Google Chrome
OS: Windows 10
Computer Architecture: x64

Testing:
To test my webpage, I'd use a variety of browsers and a variety of operating systems.
For instance, I'd check the GET request response on Chrome, Firefox, Microsoft Edge, and Opera.
Additionally, I'd use a Unix-based system to check the same browsers, as well as safari.
I would also check the connectivity using a mobile device.

I could also write a script that sends the system multiple requests concurrently in order to see how
the server performs under load.

TypeScript Features:
I created a module that generates a fake person and displays that person's information on the screen.
You can keep generating other fake people. I used the "faker" third party library for this.
I bundled using Webpack

Debugging Typescript Codes:
Many of the bugs I ran into in my completion of this assignment were related to 
compatiblity of different dependencies, which had depreciated since the book was written.
Many of my bugs were solved by just using the versions of dependencies that worked at the time
the book was written. As always, console.log statements were invaluable in determining which
pages/modules were loading. Lastly, source maps are a great tool to allow you to debug Typescript code,
which browserrs don't normally read. It allows you to step through code and add breakpoints.